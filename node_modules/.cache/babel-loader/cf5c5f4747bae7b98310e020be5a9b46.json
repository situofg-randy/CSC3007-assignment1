{"ast":null,"code":"var _jsxFileName = \"/Users/angrandy/Desktop/csc3007/src/useFetch.js\",\n    _s = $RefreshSig$();\n\nimport { buildHeaderGroups } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UseFetch() {\n  _s();\n\n  const [data, setData] = useState({});\n  const url = \"https://api.data.gov.sg/v1/environment/psi\"; // React.useEffect(() => {\n  //   const fetchData = async () => {\n  //       const res = await fetch(url);\n  //       const json = await res.json();\n  //       setResponse(json.items[0].readings);\n  //       return (\n  //         <table>\n  //           <thead>\n  //             <tr>\n  //                 { Object.keys(response).forEach((key) => <th>{key}</th> )}\n  //             </tr>\n  //           </thead>\n  //         </table>\n  //       )\n  //   };\n  //   fetchData();\n  // }, []);\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  const [headers, setHeaders] = useState([]);\n  const [lastUpdate, setLastUpdate] = useState();\n  const [headersHtml, setHeadersHtml] = useState([]);\n  const [rowsHtml, setRowsHtml] = useState([]);\n  let headersHtmlArray = [];\n  let rowsHtmlArray = [];\n  useEffect(() => {\n    fetch(url).then(json => json.json()).then(res => {\n      let date = new Date(res.items[0].update_timestamp);\n      setLastUpdate(date.getDay().toString() + \" \" + date.getMonth().toString() + \" \" + date.getFullYear().toString() + \", \" + date.getTimezoneOffset());\n      setData(res.items[0].readings);\n      setLoading(false);\n    }).catch(error => setError(error));\n  }, []);\n  useEffect(() => {\n    rowsHtmlArray = [];\n    Object.keys(data).forEach(key => {\n      rowsHtmlArray.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data[key].national\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data[key].central\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data[key].west\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data[key].east\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data[key].north\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data[key].south\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this));\n    });\n\n    if (Object.keys(data).length > 0) {\n      setHeaders(Object.keys(Object.values(data)[0]));\n    }\n\n    headersHtmlArray = [];\n    headersHtmlArray.push( /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"metric\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 27\n    }, this));\n\n    for (const i in headers) {\n      headersHtmlArray.push( /*#__PURE__*/_jsxDEV(\"th\", {\n        children: headers[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this));\n    }\n\n    setHeadersHtml(headersHtmlArray);\n    setRowsHtml(rowsHtmlArray);\n  }, [data]); // useEffect(() => {\n  //   headersArray = []\n  //   rowsArray = []\n  //   Object.keys(data).forEach((key) => headersArray.push(key))\n  //   Object.values(data).forEach((values) => rowsArray.push(values))\n  //   setHeaders(headersArray)\n  //   setRows(rowsArray)\n  // }, [data])\n  // useEffect(() => {\n  //   headersHtmlArray = []\n  //   for (const i in headers) {\n  //     headersHtmlArray.push(<th>{headers[i]}</th>)\n  //   }\n  //   setHeadersHtml(headersHtmlArray)\n  // }, [headers])\n  // useEffect(() => {\n  //   rowsHtmlArray = []\n  //   for (const i in rows) {\n  //     rowsHtmlArray.push(<tr>{headers[i]}</tr>)\n  //   }\n  //   setHeadersHtml(headersHtmlArray)\n  // }, [rows])\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Last updated \", lastUpdate, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        border: \"black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headersHtml\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rowsHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UseFetch, \"ROCq3hcUdpxWL0Huy+UIivrLIlk=\");\n\n_c = UseFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseFetch\");","map":{"version":3,"names":["buildHeaderGroups","React","useEffect","useState","UseFetch","data","setData","url","loading","setLoading","error","setError","headers","setHeaders","lastUpdate","setLastUpdate","headersHtml","setHeadersHtml","rowsHtml","setRowsHtml","headersHtmlArray","rowsHtmlArray","fetch","then","json","res","date","Date","items","update_timestamp","getDay","toString","getMonth","getFullYear","getTimezoneOffset","readings","catch","Object","keys","forEach","key","push","national","central","west","east","north","south","length","values","i","border"],"sources":["/Users/angrandy/Desktop/csc3007/src/useFetch.js"],"sourcesContent":["import { buildHeaderGroups } from \"@tanstack/react-table\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function UseFetch() {\n  const [data, setData] = useState({});\n\n  const url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n  // React.useEffect(() => {\n  //   const fetchData = async () => {\n  //       const res = await fetch(url);\n  //       const json = await res.json();\n  //       setResponse(json.items[0].readings);\n\n  //       return (\n  //         <table>\n  //           <thead>\n  //             <tr>\n  //                 { Object.keys(response).forEach((key) => <th>{key}</th> )}\n  //             </tr>\n  //           </thead>\n  //         </table>\n  //       )\n  //   };\n  //   fetchData();\n  // }, []);\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState()\n  \n  const [headers, setHeaders] = useState([])\n  const [lastUpdate, setLastUpdate] = useState()\n\n  const [headersHtml, setHeadersHtml] = useState([])\n  const [rowsHtml, setRowsHtml] = useState([])\n  let headersHtmlArray = []\n  let rowsHtmlArray = []\n\n  useEffect(() => {\n    fetch(url)\n    .then((json) => json.json())\n    .then((res) => {\n      let date = new Date(res.items[0].update_timestamp)\n      setLastUpdate(date.getDay().toString()+\" \"+date.getMonth().toString()+\" \"+date.getFullYear().toString()+\", \"+date.getTimezoneOffset())\n      setData(res.items[0].readings)\n      setLoading(false)\n    }).catch(error => setError(error))\n  }, []);\n\n  useEffect(() => {\n    rowsHtmlArray = []\n    Object.keys(data).forEach((key) => {\n      rowsHtmlArray.push(\n        <tr>\n          <td>{key}</td>\n          <td>{data[key].national}</td>\n          <td>{data[key].central}</td>\n          <td>{data[key].west}</td>\n          <td>{data[key].east}</td>\n          <td>{data[key].north}</td>\n          <td>{data[key].south}</td>\n        </tr>\n      )\n    })\n\n    if (Object.keys(data).length > 0) {\n      setHeaders(Object.keys(Object.values(data)[0]))\n    }\n    \n    headersHtmlArray = []\n    headersHtmlArray.push(<th>metric</th>)\n    for (const i in headers) {\n      headersHtmlArray.push(<th>{headers[i]}</th>)\n    }\n\n    setHeadersHtml(headersHtmlArray)\n    setRowsHtml(rowsHtmlArray)\n  }, [data])\n\n\n  // useEffect(() => {\n  //   headersArray = []\n  //   rowsArray = []\n  //   Object.keys(data).forEach((key) => headersArray.push(key))\n  //   Object.values(data).forEach((values) => rowsArray.push(values))\n  //   setHeaders(headersArray)\n  //   setRows(rowsArray)\n  // }, [data])\n\n  // useEffect(() => {\n  //   headersHtmlArray = []\n  //   for (const i in headers) {\n  //     headersHtmlArray.push(<th>{headers[i]}</th>)\n  //   }\n  //   setHeadersHtml(headersHtmlArray)\n  // }, [headers])\n\n  // useEffect(() => {\n  //   rowsHtmlArray = []\n  //   for (const i in rows) {\n  //     rowsHtmlArray.push(<tr>{headers[i]}</tr>)\n  //   }\n  //   setHeadersHtml(headersHtmlArray)\n  // }, [rows])\n\n\n  \n\n  if (loading) return <div>loading</div>\n\n  if (error) return <div>error</div>\n\n  return (\n    <div>\n      <h3>Last updated {lastUpdate} </h3>\n        <table style={{border: \"black\"}}>\n        <thead>\n          <tr>\n            {headersHtml}\n          </tr>\n        </thead>\n        <tbody>\n          {rowsHtml}\n        </tbody>\n      </table>\n    </div>\n  )  \n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}