{"ast":null,"code":"var _jsxFileName = \"/Users/angrandy/Desktop/csc3007/src/ReactTable.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { createTable, getCoreRowModel, useTableInstance } from '@tanstack/react-table';\nimport React from \"React\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\nconst table = createTable().setRowType();\nconst defaultColumns = [table.createGroup({\n  header: 'Name',\n  footer: props => props.column.id,\n  columns: [table.createDataColumn('metric', {\n    cell: info => info.getValue()\n  }), table.createDataColumn('national', {\n    cell: info => info.getValue()\n  }), table.createDataColumn('central', {\n    cell: info => info.getValue()\n  }), table.createDataColumn('west', {\n    cell: info => info.getValue()\n  }), table.createDataColumn('east', {\n    cell: info => info.getValue()\n  }), table.createDataColumn('north', {\n    cell: info => info.getValue()\n  }), table.createDataColumn('south', {\n    cell: info => info.getValue()\n  })]\n})];\nexport default function ReactTable() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [columns] = React.useState(() => [...defaultColumns]);\n  const instance = useTableInstance(table, {\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n\n  const fetchData = async () => {\n    const response = await axios.get(psi_url).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data.items[0].readings);\n      setData(response.data.items[0].readings);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); // useEffect(() => {\n  // }, data);   \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: instance.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: header.colSpan,\n            children: header.isPlaceholder ? null : header.renderHeader()\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: instance.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell.renderCell()\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReactTable, \"iAgGqRAsHR3FrJLPcbT7sLPuoqA=\", false, function () {\n  return [useTableInstance];\n});\n\n_c = ReactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"names":["axios","useEffect","useState","createTable","getCoreRowModel","useTableInstance","React","psi_url","table","setRowType","defaultColumns","createGroup","header","footer","props","column","id","columns","createDataColumn","cell","info","getValue","ReactTable","data","setData","instance","fetchData","response","get","catch","err","console","log","items","readings","getHeaderGroups","map","headerGroup","headers","colSpan","isPlaceholder","renderHeader","getRowModel","rows","row","getVisibleCells","renderCell"],"sources":["/Users/angrandy/Desktop/csc3007/src/ReactTable.tsx"],"sourcesContent":["import react from \"React\";  \nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport {\n    createTable,\n    getCoreRowModel,\n    useTableInstance,\n  } from '@tanstack/react-table'\nimport React from \"React\";\n\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\ntype Response = {\n    metric: string,\n    national: number,\n    central: number,\n    west: number,\n    east: number,\n    north: number,\n    south: number\n}\n\nconst table = createTable().setRowType<Response>(); \n\nconst defaultColumns = [\n    table.createGroup({\n      header: 'Name',\n      footer: props => props.column.id,\n      columns: [\n        table.createDataColumn('metric', {\n          cell: info => info.getValue(),\n        }),\n        table.createDataColumn('national', {\n            cell: info => info.getValue(),\n        }),\n        table.createDataColumn('central', {\n            cell: info => info.getValue(),\n        }),\n          table.createDataColumn('west', {\n            cell: info => info.getValue(),\n        }),\n          table.createDataColumn('east', {\n            cell: info => info.getValue(),\n        }),\n          table.createDataColumn('north', {\n            cell: info => info.getValue(),\n        }),\n          table.createDataColumn('south', {\n            cell: info => info.getValue(),\n        }),\n      ],\n    }),\n]\n\nexport default function ReactTable() {\n    const [data, setData] = useState([]);\n\n    const [columns] = React.useState<typeof defaultColumns>(() => [\n        ...defaultColumns,\n    ])\n      \n    const instance = useTableInstance(table, {\n        data,\n        columns,\n        getCoreRowModel: getCoreRowModel(),\n    })\n\n    const fetchData = async () => {\n        const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n        if (response) {\n            console.log(response.data.items[0].readings);\n            setData(response.data.items[0].readings);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);   \n\n    // useEffect(() => {\n        \n    // }, data);   \n\n    return (\n        <div>\n      <table>\n        <thead>\n          {instance.getHeaderGroups().map(headerGroup => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map(header => (\n                <th key={header.id} colSpan={header.colSpan}>\n                  {header.isPlaceholder ? null : header.renderHeader()}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {instance.getRowModel().rows.map(row => (\n            <tr key={row.id}>\n              {row.getVisibleCells().map(cell => (\n                <td key={cell.id}>{cell.renderCell()}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n    </table>\n    </div>\n    )\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}