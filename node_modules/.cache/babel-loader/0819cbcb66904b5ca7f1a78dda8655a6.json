{"ast":null,"code":"import _regeneratorRuntime from\"/Users/angrandy/Desktop/csc3007_assignment01/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/angrandy/Desktop/csc3007_assignment01/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/angrandy/Desktop/csc3007_assignment01/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import axios from\"axios\";import{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var psi_url=\"https://api.data.gov.sg/v1/environment/psi\";export default function ReactTable(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),columns=_useState4[0],setColumns=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),rows=_useState6[0],setRows=_useState6[1];var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(psi_url).catch(function(err){return console.log(err);});case 2:response=_context.sent;if(response){setData(data.pop());setData(data.push(response.data.items[0].readings));Object.keys(response.data.items[0].readings).forEach(function(key){setColumns(columns.push(key));setRows(rows.push(response.data.items[0].readings[key]));});Object.keys(data[0]).forEach(function(key){return console.log(key);});}case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();useEffect(function(){fetchData();},[]);// useEffect(() => {\n// }, data);   \nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:Object.keys(data[0]).forEach(function(key){return/*#__PURE__*/_jsx(\"tr\",{children:key});})})})});}// import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n// const table = createTable().setRowType<Response>(); \n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n//     // useEffect(() => {\n//     // }, data);   \n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }","map":{"version":3,"names":["React","axios","useEffect","useState","psi_url","ReactTable","data","setData","columns","setColumns","rows","setRows","fetchData","get","catch","err","console","log","response","pop","push","items","readings","Object","keys","forEach","key"],"sources":["/Users/angrandy/Desktop/csc3007_assignment01/src/ReactTable.js"],"sourcesContent":["import React from \"react\";  \nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\n\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\ntype Response = {\n    metric: string,\n    national: number,\n    central: number,\n    west: number,\n    east: number,\n    north: number,\n    south: number\n}\n\nexport default function ReactTable() {\n    const [data, setData] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [rows, setRows] = useState([]);\n\n    const fetchData = async () => {\n        const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n        if (response) {\n            setData(data.pop())\n            setData(data.push(response.data.items[0].readings));\n            Object.keys(response.data.items[0].readings).forEach((key) => {setColumns(columns.push(key)); setRows(rows.push(response.data.items[0].readings[key]))})\n            Object.keys(data[0]).forEach((key) => console.log(key))\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);   \n\n    // useEffect(() => {\n        \n    // }, data);   \n\n    return (\n      <div>\n        <table>\n            <tbody>\n                {Object.keys(data[0]).forEach((key) => (<tr>{key}</tr>))}\n            </tbody>\n        </table>\n      </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n\n// const table = createTable().setRowType<Response>(); \n\n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n      \n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n\n//     // useEffect(() => {\n        \n//     // }, data);   \n\n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"sZAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,MAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,C,2CAGA,GAAMC,QAAO,CAAG,4CAAhB,CAYA,cAAe,SAASC,WAAT,EAAsB,CACjC,cAAwBF,QAAQ,CAAC,EAAD,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,eAA8BJ,QAAQ,CAAC,EAAD,CAAtC,yCAAOK,OAAP,eAAgBC,UAAhB,eACA,eAAwBN,QAAQ,CAAC,EAAD,CAAhC,yCAAOO,IAAP,eAAaC,OAAb,eAEA,GAAMC,UAAS,4FAAG,wKACSX,MAAK,CAACY,GAAN,CAAUT,OAAV,EAAmBU,KAAnB,CAAyB,SAAAC,GAAG,QAAIC,QAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EAA5B,CADT,QACRG,QADQ,eAGd,GAAIA,QAAJ,CAAc,CACVX,OAAO,CAACD,IAAI,CAACa,GAAL,EAAD,CAAP,CACAZ,OAAO,CAACD,IAAI,CAACc,IAAL,CAAUF,QAAQ,CAACZ,IAAT,CAAce,KAAd,CAAoB,CAApB,EAAuBC,QAAjC,CAAD,CAAP,CACAC,MAAM,CAACC,IAAP,CAAYN,QAAQ,CAACZ,IAAT,CAAce,KAAd,CAAoB,CAApB,EAAuBC,QAAnC,EAA6CG,OAA7C,CAAqD,SAACC,GAAD,CAAS,CAACjB,UAAU,CAACD,OAAO,CAACY,IAAR,CAAaM,GAAb,CAAD,CAAV,CAA+Bf,OAAO,CAACD,IAAI,CAACU,IAAL,CAAUF,QAAQ,CAACZ,IAAT,CAAce,KAAd,CAAoB,CAApB,EAAuBC,QAAvB,CAAgCI,GAAhC,CAAV,CAAD,CAAP,CAAyD,CAAvJ,EACAH,MAAM,CAACC,IAAP,CAAYlB,IAAI,CAAC,CAAD,CAAhB,EAAqBmB,OAArB,CAA6B,SAACC,GAAD,QAASV,QAAO,CAACC,GAAR,CAAYS,GAAZ,CAAT,EAA7B,EACH,CARa,sDAAH,kBAATd,UAAS,0CAAf,CAWAV,SAAS,CAAC,UAAM,CACZU,SAAS,GACZ,CAFQ,CAEN,EAFM,CAAT,CAIA;AAEA;AAEA,mBACE,kCACE,oCACI,uBACKW,MAAM,CAACC,IAAP,CAAYlB,IAAI,CAAC,CAAD,CAAhB,EAAqBmB,OAArB,CAA6B,SAACC,GAAD,qBAAU,oBAAKA,GAAL,EAAV,EAA7B,CADL,EADJ,EADF,EADF,CASH,CA+CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}