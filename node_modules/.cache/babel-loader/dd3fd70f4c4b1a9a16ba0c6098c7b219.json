{"ast":null,"code":"var _jsxFileName = \"/Users/angrandy/Desktop/csc3007/src/test.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useFetch } from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\nexport default function Test() {\n  _s();\n\n  const response = useFetch(psi_url);\n  const data = response.items[0].readings;\n  Object.keys(data).forEach(key => console.log(key));\n  Object.values(data).forEach(value => console.log(value));\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: Object.keys(data).forEach(key => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 58\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n} // import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n// const table = createTable().setRowType<Response>(); \n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n//     // useEffect(() => {\n//     // }, data);   \n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }\n\n_s(Test, \"gRQo9Bspb2ufT2LR68mJ2zOOtzs=\", false, function () {\n  return [useFetch];\n});\n\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","axios","useEffect","useState","useFetch","psi_url","Test","response","data","items","readings","Object","keys","forEach","key","console","log","values","value"],"sources":["/Users/angrandy/Desktop/csc3007/src/test.js"],"sourcesContent":["import React from \"react\";  \nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useFetch } from \"./useFetch\";\n\n\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n\nexport default function Test() {\n    const response = useFetch(psi_url)\n    const data = response.items[0].readings\n    Object.keys(data).forEach((key) => console.log(key)); \n    Object.values(data).forEach((value) => console.log(value)); \n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    { Object.keys(data).forEach((key) => <th>{key}</th> )}\n                </tr>\n            </thead>\n        </table>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n\n// const table = createTable().setRowType<Response>(); \n\n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n      \n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n\n//     // useEffect(() => {\n        \n//     // }, data);   \n\n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAGA,MAAMC,OAAO,GAAG,4CAAhB;AAGA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC3B,MAAMC,QAAQ,GAAGH,QAAQ,CAACC,OAAD,CAAzB;EACA,MAAMG,IAAI,GAAGD,QAAQ,CAACE,KAAT,CAAe,CAAf,EAAkBC,QAA/B;EACAC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA2BC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAnC;EACAH,MAAM,CAACM,MAAP,CAAcT,IAAd,EAAoBK,OAApB,CAA6BK,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAvC;EAEA,oBACI;IAAA,uBACI;MAAA,uBACI;QAAA,UACMP,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA2BC,GAAD,iBAAS;UAAA,UAAKA;QAAL;UAAA;UAAA;UAAA;QAAA,QAAnC;MADN;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,C,CA+CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA5KwBR,I;UACHF,Q;;;KADGE,I"},"metadata":{},"sourceType":"module"}