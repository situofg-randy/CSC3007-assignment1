{"ast":null,"code":"var _jsxFileName = \"/Users/angrandy/Desktop/csc3007/src/ReactTable.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\nexport default function ReactTable() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [rows, setRows] = useState([]);\n\n  const fetchData = async () => {\n    const response = await axios.get(psi_url).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data.items[0].readings);\n      Object.keys(response.data.items[0].readings).forEach(key => {\n        setColumns(columns.push(key));\n        setRows(rows.push(response.data.items[0].readings[key]));\n      });\n      setData(response);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: response.map(x => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.central\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.east\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.national\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.north\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.south\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: x.west\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    }\n\n    console.log(columns);\n    console.log(rows);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); // useEffect(() => {\n  // }, data);   \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(x => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: x.central\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: x.east\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: x.national\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: x.north\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: x.south\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: x.west\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n} // import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n// const table = createTable().setRowType<Response>(); \n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n//     // useEffect(() => {\n//     // }, data);   \n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }\n\n_s(ReactTable, \"gFo7mkd1/M2Kk83/RWDpVjXWH/0=\");\n\n_c = ReactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"names":["React","axios","useEffect","useState","psi_url","ReactTable","data","setData","columns","setColumns","rows","setRows","fetchData","response","get","catch","err","console","log","items","readings","Object","keys","forEach","key","push","map","x","central","east","national","north","south","west"],"sources":["/Users/angrandy/Desktop/csc3007/src/ReactTable.js"],"sourcesContent":["import React from \"react\";  \nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\n\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\ntype Response = {\n    metric: string,\n    national: number,\n    central: number,\n    west: number,\n    east: number,\n    north: number,\n    south: number\n}\n\nexport default function ReactTable() {\n    const [data, setData] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [rows, setRows] = useState([]);\n\n    const fetchData = async () => {\n        const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n        if (response) {\n            console.log(response.data.items[0].readings);\n            Object.keys(response.data.items[0].readings).forEach((key) => {setColumns(columns.push(key)); setRows(rows.push(response.data.items[0].readings[key]))})\n            setData(response);\n\n            return (\n                <div>\n                  <table>\n                      \n                      <tbody>\n                          {response.map((x) => (\n                          <tr>\n                              <td>{x.central}</td>\n                              <td>{x.east}</td>\n                              <td>{x.national}</td>\n                              <td>{x.north}</td>\n                              <td>{x.south}</td>\n                              <td>{x.west}</td>\n                          </tr>\n                          ))}\n                      </tbody>\n                  </table>\n                </div>\n              )\n        }\n        console.log(columns)\n        console.log(rows)\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);   \n\n    // useEffect(() => {\n        \n    // }, data);   \n\n    return (\n      <div>\n        <table>\n            \n            <tbody>\n                {data.map((x) => (\n                <tr>\n                    <td>{x.central}</td>\n                    <td>{x.east}</td>\n                    <td>{x.national}</td>\n                    <td>{x.north}</td>\n                    <td>{x.south}</td>\n                    <td>{x.west}</td>\n                </tr>\n                ))}\n            </tbody>\n        </table>\n      </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n\n// const table = createTable().setRowType<Response>(); \n\n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n      \n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n\n//     // useEffect(() => {\n        \n//     // }, data);   \n\n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}