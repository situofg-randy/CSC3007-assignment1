{"ast":null,"code":"var _jsxFileName = \"/Users/angrandy/Desktop/csc3007/src/ReactTable.js\",\n    _s = $RefreshSig$();\n\nimport react from \"React\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { createTable, getCoreRowModel, useTableInstance } from '@tanstack/react-table';\nimport React from \"React\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\nexport default function ReactTable() {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const fetchData = async () => {\n    const response = await axios.get(psi_url).catch(err => console.log(err));\n\n    if (response) {\n      console.log(response.data.items[0].readings);\n      setData(response.data.items[0].readings);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []); // useEffect(() => {\n  // }, data);   \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n} // import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n// const table = createTable().setRowType<Response>(); \n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n//     // useEffect(() => {\n//     // }, data);   \n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }\n\n_s(ReactTable, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = ReactTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"names":["react","axios","useEffect","useState","createTable","getCoreRowModel","useTableInstance","React","psi_url","ReactTable","data","setData","fetchData","response","get","catch","err","console","log","items","readings"],"sources":["/Users/angrandy/Desktop/csc3007/src/ReactTable.js"],"sourcesContent":["import react from \"React\";  \nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport {\n    createTable,\n    getCoreRowModel,\n    useTableInstance,\n  } from '@tanstack/react-table'\nimport React from \"React\";\n\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\ntype Response = {\n    metric: string,\n    national: number,\n    central: number,\n    west: number,\n    east: number,\n    north: number,\n    south: number\n}\n\nexport default function ReactTable() {\n    const [data, setData] = useState([]);\n\n    const fetchData = async () => {\n        const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n        if (response) {\n            console.log(response.data.items[0].readings);\n            setData(response.data.items[0].readings);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);   \n\n    // useEffect(() => {\n        \n    // }, data);   \n\n    return (\n        <div>\n      \n    </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n\n// const table = createTable().setRowType<Response>(); \n\n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n      \n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n\n//     // useEffect(() => {\n        \n//     // }, data);   \n\n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SACIC,WADJ,EAEIC,eAFJ,EAGIC,gBAHJ,QAIS,uBAJT;AAKA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,4CAAhB;AAYA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMS,SAAS,GAAG,YAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUN,OAAV,EAAmBO,KAAnB,CAAyBC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAhC,CAAvB;;IAEA,IAAIH,QAAJ,EAAc;MACVI,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACH,IAAT,CAAcS,KAAd,CAAoB,CAApB,EAAuBC,QAAnC;MACAT,OAAO,CAACE,QAAQ,CAACH,IAAT,CAAcS,KAAd,CAAoB,CAApB,EAAuBC,QAAxB,CAAP;IACH;EACJ,CAPD;;EASAlB,SAAS,CAAC,MAAM;IACZU,SAAS;EACZ,CAFQ,EAEN,EAFM,CAAT,CAZiC,CAgBjC;EAEA;;EAEA,oBACI;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,C,CA+CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAtLwBH,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}