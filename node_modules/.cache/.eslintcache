[{"/Users/angrandy/Desktop/csc3007/src/index.js":"1","/Users/angrandy/Desktop/csc3007/src/ReactTable.js":"2","/Users/angrandy/Desktop/csc3007/src/test.js":"3","/Users/angrandy/Desktop/csc3007/src/useFetch.js":"4","/Users/angrandy/Desktop/csc3007_assignment01/src/index.js":"5","/Users/angrandy/Desktop/csc3007_assignment01/src/useFetch.js":"6","/Users/angrandy/Desktop/csc3007_assignment01/src/ReactTable.js":"7"},{"size":287,"mtime":1654420362251,"results":"8","hashOfConfig":"9"},{"size":4449,"mtime":1654323055679,"results":"10","hashOfConfig":"9"},{"size":4086,"mtime":1654421635258,"results":"11","hashOfConfig":"9"},{"size":2157,"mtime":1654676894574,"results":"12","hashOfConfig":"9"},{"size":287,"mtime":1654420362251,"results":"13","hashOfConfig":"14"},{"size":2157,"mtime":1654676894574,"results":"15","hashOfConfig":"14"},{"size":4449,"mtime":1654323055679,"results":"16","hashOfConfig":"14"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"12xu24k",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"j276m",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/angrandy/Desktop/csc3007/src/index.js",["43"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport ReactTable from './ReactTable';\nimport UseFetch from './useFetch';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <UseFetch />\n  </React.StrictMode>\n);\n\n",[],"/Users/angrandy/Desktop/csc3007/src/ReactTable.js",["44","45"],[],"import React from \"react\";  \nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\n\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\ntype Response = {\n    metric: string,\n    national: number,\n    central: number,\n    west: number,\n    east: number,\n    north: number,\n    south: number\n}\n\nexport default function ReactTable() {\n    const [data, setData] = useState([]);\n    const [columns, setColumns] = useState([]);\n    const [rows, setRows] = useState([]);\n\n    const fetchData = async () => {\n        const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n        if (response) {\n            setData(data.pop())\n            setData(data.push(response.data.items[0].readings));\n            Object.keys(response.data.items[0].readings).forEach((key) => {setColumns(columns.push(key)); setRows(rows.push(response.data.items[0].readings[key]))})\n            Object.keys(data[0]).forEach((key) => console.log(key))\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);   \n\n    // useEffect(() => {\n        \n    // }, data);   \n\n    return (\n      <div>\n        <table>\n            <tbody>\n                {Object.keys(data[0]).forEach((key) => (<tr>{key}</tr>))}\n            </tbody>\n        </table>\n      </div>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n\n// const table = createTable().setRowType<Response>(); \n\n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n      \n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n\n//     // useEffect(() => {\n        \n//     // }, data);   \n\n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/angrandy/Desktop/csc3007/src/test.js",["46","47","48"],[],"import React from \"react\";  \nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useFetch } from \"./useFetch\";\n\n\nconst psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n\nexport default function Test() {\n    const response = useFetch(psi_url)\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        console.log(response)\n    }, [response]);\n        \n    // Object.keys(data).forEach((key) => console.log(key)); \n    // Object.values(data).forEach((value) => console.log(value)); \n\n    \n    const header = () => {\n        if (data) {\n            return (\n                <tr>\n                    {/* { Object.keys(data).forEach((key) => <th>{key}</th> )} */}\n                </tr>\n            )\n        }\n    } \n\n    return (\n        <table>\n            <thead>\n                {header()}\n            </thead>\n        </table>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import react from \"React\";  \n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import {\n//     createTable,\n//     getCoreRowModel,\n//     useTableInstance,\n//   } from '@tanstack/react-table'\n// import React from \"React\";\n\n// const psi_url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n// type Response = {\n//     metric: string,\n//     national: number,\n//     central: number,\n//     west: number,\n//     east: number,\n//     north: number,\n//     south: number\n// }\n\n// const table = createTable().setRowType<Response>(); \n\n// const defaultColumns = [\n//     table.createGroup({\n//       header: 'Name',\n//       footer: props => props.column.id,\n//       columns: [\n//         table.createDataColumn('metric', {\n//           cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('national', {\n//             cell: info => info.getValue(),\n//         }),\n//         table.createDataColumn('central', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('west', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('east', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('north', {\n//             cell: info => info.getValue(),\n//         }),\n//           table.createDataColumn('south', {\n//             cell: info => info.getValue(),\n//         }),\n//       ],\n//     }),\n// ]\n\n// export default function ReactTable() {\n//     const [data, setData] = useState([]);\n\n//     const [columns] = React.useState<typeof defaultColumns>(() => [\n//         ...defaultColumns,\n//     ])\n      \n//     const instance = useTableInstance(table, {\n//         data,\n//         columns,\n//         getCoreRowModel: getCoreRowModel(),\n//     })\n\n//     const fetchData = async () => {\n//         const response = await axios.get(psi_url).catch(err => console.log(err));\n    \n//         if (response) {\n//             console.log(response.data.items[0].readings);\n//             setData(response.data.items[0].readings);\n//         }\n//     };\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);   \n\n//     // useEffect(() => {\n        \n//     // }, data);   \n\n//     return (\n//         <div>\n//       <table>\n//         <thead>\n//           {instance.getHeaderGroups().map(headerGroup => (\n//             <tr key={headerGroup.id}>\n//               {headerGroup.headers.map(header => (\n//                 <th key={header.id} colSpan={header.colSpan}>\n//                   {header.isPlaceholder ? null : header.renderHeader()}\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//         </thead>\n//         <tbody>\n//           {instance.getRowModel().rows.map(row => (\n//             <tr key={row.id}>\n//               {row.getVisibleCells().map(cell => (\n//                 <td key={cell.id}>{cell.renderCell()}</td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//     </table>\n//     </div>\n//     )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/angrandy/Desktop/csc3007/src/useFetch.js",["49","50"],[],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./table.css\"\n\nexport default function UseFetch() {\n  const [data, setData] = useState({});\n\n  const url = \"https://api.data.gov.sg/v1/environment/psi\";\n\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState()\n  \n  const [headers, setHeaders] = useState([])\n  const [lastUpdate, setLastUpdate] = useState()\n\n  const [headersHtml, setHeadersHtml] = useState([])\n  const [rowsHtml, setRowsHtml] = useState([])\n  let headersHtmlArray = []\n  let rowsHtmlArray = []\n\n  useEffect(() => {\n    fetch(url)\n    .then((json) => json.json())\n    .then((res) => {\n      let date = new Date(res.items[0].update_timestamp)\n      let mins = ('0'+date.getMinutes()).slice(-2)\n      let months = date.toLocaleString('default', { month: 'short' });\n      setLastUpdate(date.getDay().toString()+\" \"+months+\" \"+date.getFullYear().toString()+\", \"+date.getHours()+\":\"+mins)\n      setData(res.items[0].readings)\n      setLoading(false)\n    }).catch(error => setError(error))\n  }, []);\n\n  useEffect(() => {\n    rowsHtmlArray = []\n    Object.keys(data).forEach((key) => {\n      rowsHtmlArray.push(\n        <tr>\n          <td>{key}</td>\n          <td>{data[key].national}</td>\n          <td>{data[key].central}</td>\n          <td>{data[key].west}</td>\n          <td>{data[key].east}</td>\n          <td>{data[key].north}</td>\n          <td>{data[key].south}</td>\n        </tr>\n      )\n    })\n\n    if (Object.keys(data).length > 0) {\n      setHeaders(Object.keys(Object.values(data)[0]))\n    }\n    \n    headersHtmlArray = []\n    headersHtmlArray.push(<th>metric</th>)\n    for (const i in headers) {\n      headersHtmlArray.push(<th>{headers[i]}</th>)\n    }\n\n    setHeadersHtml(headersHtmlArray)\n    setRowsHtml(rowsHtmlArray)\n  }, [data])\n\n  if (loading) return <div>loading</div>\n\n  if (error) return <div>error</div>\n\n  return (\n    <div>\n      <h4>Last updated {lastUpdate} </h4>\n        <table>\n        <thead>\n          <tr>\n            {headersHtml}\n          </tr>\n        </thead>\n        <tbody>\n          {rowsHtml}\n        </tbody>\n      </table>\n    </div>\n  )  \n}\n\n","/Users/angrandy/Desktop/csc3007_assignment01/src/index.js",["51"],[],"/Users/angrandy/Desktop/csc3007_assignment01/src/useFetch.js",["52","53"],[],"/Users/angrandy/Desktop/csc3007_assignment01/src/ReactTable.js",["54","55"],[],{"ruleId":"56","severity":1,"message":"57","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":8,"column":6,"nodeType":"58","messageId":"59","endLine":8,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":36,"column":8,"nodeType":"63","endLine":36,"endColumn":10,"suggestions":"64"},{"ruleId":"56","severity":1,"message":"65","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":13},{"ruleId":"56","severity":1,"message":"66","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":19},{"ruleId":"56","severity":1,"message":"67","line":12,"column":18,"nodeType":"58","messageId":"59","endLine":12,"endColumn":25},{"ruleId":"61","severity":1,"message":"68","line":35,"column":21,"nodeType":"63","endLine":35,"endColumn":23},{"ruleId":"61","severity":1,"message":"69","line":54,"column":24,"nodeType":"63","endLine":54,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":18},{"ruleId":"61","severity":1,"message":"68","line":35,"column":21,"nodeType":"63","endLine":35,"endColumn":23},{"ruleId":"61","severity":1,"message":"69","line":54,"column":24,"nodeType":"63","endLine":54,"endColumn":26},{"ruleId":"56","severity":1,"message":"60","line":8,"column":6,"nodeType":"58","messageId":"59","endLine":8,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":36,"column":8,"nodeType":"63","endLine":36,"endColumn":10,"suggestions":"70"},"no-unused-vars","'ReactTable' is defined but never used.","Identifier","unusedVar","'Response' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["71"],"'axios' is defined but never used.","'useEffect' is defined but never used.","'setData' is assigned a value but never used.","Assignments to the 'rowsHtmlArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'headersHtmlArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",["72"],{"desc":"73","fix":"74"},{"desc":"73","fix":"75"},"Update the dependencies array to be: [fetchData]",{"range":"76","text":"77"},{"range":"78","text":"77"},[1040,1042],"[fetchData]",[1040,1042]]